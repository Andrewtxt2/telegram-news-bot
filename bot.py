from telegram import (
    Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto, InputMediaVideo
)
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters
)

import os

BOT_TOKEN = os.environ['BOT_TOKEN']
TARGET_CHAT_ID = int(os.environ['TARGET_CHAT_ID'])
CONFIRM_TEXT = "‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à—É –Ω–æ–≤–∏–Ω—É –æ—Ç—Ä–∏–º–∞–Ω–æ."

# –°—Ç–∞–Ω–∏
WAITING_FOR_NEWS = {}

# –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ä—Ç, —è–∫—â–æ –≤—ñ–Ω –∑–∞–¥–∞–Ω–∏–π
PORT = int(os.environ.get("PORT", 10000))  # –Ø–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—Ä—Ç 10000

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("üì∞ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–≤–∏–Ω—É", callback_data="send_news")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–≤–∏–Ω—É.", reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    WAITING_FOR_NEWS[user_id] = True
    await query.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ –∞–±–æ –≤—ñ–¥–µ–æ –Ω–æ–≤–∏–Ω–∏:")

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id

    if WAITING_FOR_NEWS.get(user_id):
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ, —â–æ –Ω–∞–¥—ñ—Å–ª–∞–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        if update.message.text:
            await context.bot.send_message(
                chat_id=TARGET_CHAT_ID,
                text=f"üìù –ù–æ–≤–∏–Ω–∞ –≤—ñ–¥ @{update.effective_user.username or update.effective_user.first_name}:\n\n{update.message.text}"
            )
        elif update.message.photo:
            await context.bot.send_photo(
                chat_id=TARGET_CHAT_ID,
                photo=update.message.photo[-1].file_id,
                caption=f"üñºÔ∏è –§–æ—Ç–æ –≤—ñ–¥ @{update.effective_user.username or update.effective_user.first_name}"
            )
        elif update.message.video:
            await context.bot.send_video(
                chat_id=TARGET_CHAT_ID,
                video=update.message.video.file_id,
                caption=f"üìπ –í—ñ–¥–µ–æ –≤—ñ–¥ @{update.effective_user.username or update.effective_user.first_name}"
            )
        else:
            await update.message.reply_text("‚ö†Ô∏è –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ –∞–±–æ –≤—ñ–¥–µ–æ.")

        # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
        await update.message.reply_text(CONFIRM_TEXT)
        WAITING_FOR_NEWS.pop(user_id, None)
    else:
        await update.message.reply_text("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É ‚Äú–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–≤–∏–Ω—É‚Äù —Å–ø–æ—á–∞—Ç–∫—É.")

if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.ALL, message_handler))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ.")
    app.run_polling(port=PORT)  # –í–∫–∞–∑—É—î–º–æ –ø–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É
